rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isLoggedIn() {
      return request.auth != null && request.auth.token.email_verified;
    }

    match /users/{userId} {
      allow read: if isLoggedIn();
      allow write: if isLoggedIn() && request.auth.uid == userId && isValidUserData(request.resource.data);

      function isValidUserData(data) {
        let keys = ["name", "birthDay", "gender"];
        return data.keys().hasAll(keys)
          && data.keys().hasOnly(keys)
          && data.name is string && data.name.size() > 0 && data.name.size() <= 100
          && data.birthDay is string && data.birthDay.matches("^(19|20)[0-9][0-9][-\\/. ](0[1-9]|1[012])[-\\/. ](0[1-9]|[12][0-9]|3[01])$")
          && data.gender in ["MALE", "FEMALE", "OTHER"]
      }
    }

    match /open-posts/{postId} {
      allow read: if isLoggedIn();
      allow write: if isLoggedIn() && isValidPostData(request.resource.data);

      function isValidPostData(data) {
        let keys = ["text", "createdBy", "createdAt"];
        return data.keys().hasAll(keys)
          && data.keys().hasOnly(keys)
          && data.text is string && data.text.size() > 0 && data.text.size() <= 1000
          && data.createdBy == request.auth.uid
          && data.createdAt == request.time;
      }
    }
  }
}